import java.util.HashMap;
import java.util.LinkedHashMap;

public class LRUCache {
    HashMap<Integer, Integer> map;
    int capacity = 0;
    int length;

    public LRUCache(int capacity) {
        this.capacity = capacity;
        this.map = new LinkedHashMap<>();
    }

    public int get(int key) {
        if(map.containsKey(key)){
            int val = map.get(key);
            map.remove(key);
            map.put(key,val);
            return val;
        }
        return -1;
    }

    public void put(int key, int value) {
        if(length==capacity  && !map.containsKey(key)){
            map.remove(map.keySet().iterator().next());
            map.put(key,value);
            return;
        }
        if (map.containsKey(key)) {
            map.remove(key);
            map.put(key,value);
        }
        else {
            map.put(key, value);
            ++length;
        }
    }
}