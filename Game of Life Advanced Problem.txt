import java.util.*;
public class Practice {
	static int row,col;
	static int count=0;
	static char inp[][];
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	    Scanner scan = new Scanner(System.in);
	    String in=scan.nextLine();
	    row=Integer.valueOf(in.split(" ")[0]);
	    col=Integer.valueOf(in.split(" ")[1]);
	    inp= new char [row][col];
	    char res[][]=new char [row][col];
	    int s=0;
	    for(int i=0; i<row; ++i) {
	    	String input=scan.nextLine();
	    	inp[i]=input.toCharArray();
	    }
	    int gen=scan.nextInt();
	    res=rule(inp,gen);
	    for(int i=0;i<row;++i) {
			for(int j=0;j<col;++j) {
				if(res[i][j]=='@') {
						s++;
				}
			}
	    }
	    System.out.println("Number of organisms left: " + s);
	    scan.close();
	}
	
	static char[][] rule(char inp1[][], int gen){
		if(gen<=0) {
			return inp1;
		}
		char tmp[][]=new char[row][col];
		for(int i=0;i<row;++i) {
				for(int j=0;j<col;++j) {
					if(inp1[i][j]=='#') 						
					tmp[i][j]=newBirth(inp1,i,j);
					else if(inp1[i][j]=='@')
					tmp[i][j]=organism(inp1,i,j);
				}
		}
		count++;
			System.out.println("Iteration: " + count);
			for(int k=0;k<row;++k) {
				for(int l=0;l<col;++l) {
					System.out.print(tmp[k][l]);
				}
				System.out.println("");
			}
			System.out.println("");
			tmp=rule(tmp,--gen);
		return tmp;
	}
	
	static char organism(char inp1[][], int i, int j){
		int sum=0;
		char c='@';
		if(inp1[i][j]=='@') {
	    if(i-1>=0 && j-1>=0) {
			sum+=inp1[i-1][j-1]=='@'?1:0;
		}
		if(i-1>=0) {
			sum+=inp1[i-1][j]=='@'?1:0;
		}
		if(i-1>=0 && j+1<col) {
			sum+=inp1[i-1][j+1]=='@'?1:0;
		}
		if(j-1>=0) {
			sum+=inp1[i][j-1]=='@'?1:0;
		}
		if(j+1<col) {
			sum+=inp1[i][j+1]=='@'?1:0;
		}
		if(i+1<row && j-1>=0) {
			sum+=inp1[i+1][j-1]=='@'?1:0;
		}
		if(i+1<row) {
			sum+=inp1[i+1][j]=='@'?1:0;
		}
		if(i+1<row && j+1<col) {
			sum+=inp1[i+1][j+1]=='@'?1:0;
		}
		if(sum==0 || sum==1) {
			c='#';
		}
		else if(sum==2 || sum==3) {
			c='@';
		}
		else if(sum>=4) {
			c='#';
		}
		}
		return c;
	}
	
	static char newBirth (char inp1[][], int i, int j){
		int sum=0;
		char c='#';
		if(inp1[i][j]=='#'){
			if(i-1>=0 && j-1>=0) {
				sum+=inp1[i-1][j-1]=='@'?1:0;
			}
			if(i-1>=0) {
				sum+=inp1[i-1][j]=='@'?1:0;
			}
			if(i-1>=0 && j+1<col) {
				sum+=inp1[i-1][j+1]=='@'?1:0;
			}
			if(j-1>=0) {
				sum+=inp1[i][j-1]=='@'?1:0;
			}
			if(j+1<col) {
				sum+=inp1[i][j+1]=='@'?1:0;
			}
			if(i+1<row && j-1>=0) {
				sum+=inp1[i+1][j-1]=='@'?1:0;
			}
			if(i+1<row) {
				sum+=inp1[i+1][j]=='@'?1:0;
			}
			if(i+1<row && j+1<col) {
				sum+=inp1[i+1][j+1]=='@'?1:0;
			}
			if(sum==3) {
				c='@';
			}
		}
		return c;
	}
}

